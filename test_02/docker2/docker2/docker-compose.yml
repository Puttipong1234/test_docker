version: '3'

networks:
  app-tier-python3-v1:
    driver: bridge

services:
  web:
    build: ../../images/python-3.6
    container_name: web-python3-v1
    restart: always
    ports:
     - 8085:5000
     # - 5601:5601
     - 5701:5701
     - 9200:9200
     - 5044:5044
    volumes:
     - ./src:/usr/src/app
    command: ["python", "./start.py"]
    networks:
     - app-tier-python3-v1

  mariadb:
    image: mariadb:10.2
    container_name: mariadb-python3-v1
    restart: always
    volumes:
     - ./db:/var/lib/mysql
    command:
      mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON
    environment:
     - MYSQL_ROOT_PASSWORD=theory@2018#
    networks:
     - app-tier-python3-v1

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-python3-v1
    restart: always
    ports:
     - 8086:80
    environment:
     - PMA_HOST=mariadb
    networks:
     - app-tier-python3-v1

  selenium-hub:
    image: selenium/hub:3.141.0-actinium
    container_name: selenium-hub
    restart: always
    ports:
      - 4444:4444
    networks:
      - app-tier-python3-v1

  firefox:
    image: selenium/node-firefox:3.141.0-actinium
    depends_on:
      - selenium-hub
    restart: always
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
    networks:
      - app-tier-python3-v1

  neo4j:
   image: neo4j:3.5
   container_name: neo4j-python3-v1
   restart: always
   ports:
     - 7474:7474
     - 7687:7687
   environment:
     - NEO4J_dbms_security_procedures_unrestricted=apoc.*
     - NEO4J_apoc_import_file_enabled=true
     - NEO4J_dbms_shell_enabled=true
   volumes:
     - ./neo4j/plugins:/plugins
     - ./neo4j/data:/data
     - ./neo4j/import:/import
     - ./neo4j/conf:/conf
   networks:
     - app-tier-python3-v1

  mongo:
    image: mongo:3.2
    container_name: mongo-python3-v1
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./mongo:/etc/mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: theory@2018#
    networks:
      - app-tier-python3-v1
 

  # elastic_V2:
  #   image: elasticsearch:7.3.0
  #   container_name: elasticsearch_V2
  # #   volumes:
  # #     - /home/worawut/Elastic/plugin:/usr/share/elasticsearch/plugins
  # #     - /home/worawut/Elastic/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  # #    - /home/worawut/Elastic/config/jvm.options:/usr/share/elasticsearch/config/jvm.options
  #   hostname: elasticsearch
  #   ports:
  #     # - "9200:9200"
  #     # - "9300:9300"
  #     - "9400:9400"
  #     - "9500:9500"

  # #  deploy:
  # #    resources:
  # #      limits:
  # #        cpus: '8'
  # #      reservations:
  # #        cpus: '0.25'
  #   environment:
  #     - "discovery.type=single-node"
  # #     - "ES_JAVA_OPTS=-Xms4000m -Xmx8000m"
  # #     - "ES_JAVA_OPTS=-Xms2g -Xmx40g"
  #   networks:
  #     - app-tier-python3-v1
  # kibana_V2:
  #   image: kibana:7.3.0
  #   container_name: kibana_V2
  # #    volumes:
  # #      - /home/worawut/Elastic/config_kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  # #    deploy:
  # #      resources:
  # #        limits:
  # #          cpus: '8'
  # #        reservations:
  # #          cpus: '0.25'
  #   ports:
  #     # - "6601:6601"
  #     - "5601:5601"
    # networks:
    #   - app-tier-python3-v1
#     environment:
#      - "ES_JAVA_OPTS=-Xms4000m -Xmx8000m"

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   environment:
  #     TZ: "Asia/Bangkok"
  #   networks:
  #     # - app-tier-python3-v1
  #     - kafka_network
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: wurstmeister/kafka
  #   environment:
  #     TZ: "Asia/Bangkok"
  #   networks:
  #     # - app-tier-python3-v1
  #     - kafka_network
  #   environment:
  #     HOSTNAME_COMMAND: "hostname"
  #     BROKER_ID_COMMAND: "date +%s|cut -c8-10"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_CREATE_TOPICS: "syslog:1:1"
  # producer:
  #   image: krmonline/syslog-ng-softnix:0.9dev
  #   environment:
  #     TZ: "Asia/Bangkok"
  #   networks:
  #     # - app-tier-python3-v1
  #     - kafka_network
  # consumer:
  #   image: krmonline/syslog-ng-softnix:0.9dev
  #   environment:
  #     TZ: "Asia/Bangkok"
  #   networks:
  #     # - app-tier-python3-v1
  #     - kafka_network



  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   build: .
  #   ports:
  #     - "9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock


  # zookeeper:
  #   image: confluentinc/cp-zookeeper:5.2.0
  #   hostname: zookeeper
  #   container_name: zookeeper
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   extra_hosts:
  #     - "moby:127.0.0.1"

  # kafka:
  #   image: confluentinc/cp-kafka:5.2.0
  #   hostname: kafka
  #   container_name: kafka
  #   ports:
  #     - '9092:9092'
  #     - '9092'
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  #   extra_hosts:
  #     - "moby:127.0.0.1"

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:5.2.0
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - '9999:8081'
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
  #   extra_hosts:
  #     - "moby:127.0.0.1"

  # kafka-create-topics:
  #   image: confluentinc/cp-kafka:5.2.0
  #   depends_on:
  #     - kafka
  #   hostname: kafka-create-topics
  #   command: "bash -c 'echo Waiting for Kafka to be ready... && \
  #                      cub kafka-ready -b kafka:9092 1 20 && \
  #                      kafka-topics --create --topic test --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
  #                      sleep infinity'"
  #   environment:
  #     KAFKA_BROKER_ID: ignored
  #     KAFKA_ZOOKEEPER_CONNECT: ignored
  #   extra_hosts:
  #     - "moby:127.0.0.1"







  # hub:
  #   image: selenium/hub:3.11.0-californium
  #   container_name: selenium-hub
  #   domainname: mydomain.net
  #   hostname: hub
  #   restart: on-failure:10
  #   ports:
  #       - 4444:4444
  #   environment:
  #       - JAVA_OPTS=-Xms2g -Xmx6g
  #       - TZ=America/Denver

  # chrome:
  #   image: selenium/node-chrome:3.11.0-californium
  #   dns: 192.168.1.100
  #   shm_size: 2g
  #   depends_on:
  #       - hub
  #   volumes:
  #       - /var/www/files:/var/www/files
  #       - /dev/shm:/dev/shm 
  #   environment:
  #       - TZ=America/Denver
  #       - JAVA_OPTS=-Xmx4g
  #       - HUB_PORT_4444_TCP_ADDR=hub
  #       - HUB_PORT_4444_TCP_PORT=4444
  #       - DBUS_SESSION_BUS_ADDRESS=/dev/null